from typing import List, Optional, Tuple, Dict, Any

class BrokerBase:
    """
    Minimal interface to place/cancel and watch orders.
    """
    def get_price(self, symbol: str) -> float: ...
    def place_limit(self, symbol: str, side: str, qty: float, price: float, client_id: str) -> str: ...
    def place_market(self, symbol: str, side: str, qty: float, client_id: str) -> str: ...
    def place_reduce_only_limit(self, symbol: str, side: str, qty: float, price: float, client_id: str) -> str: ...
    def place_stop(self, symbol: str, side: str, qty: float, stop_price: float, client_id: str) -> str: ...
    def order_status(self, order_id: str) -> Dict[str, Any]: ...
    def cancel_order(self, order_id: str) -> None: ...
    def open_position_size(self, symbol: str) -> float: ...
    def filled_size(self, order_id: str) -> float: ...

